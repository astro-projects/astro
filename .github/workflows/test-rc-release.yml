name: testRCRelease

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      issue_url:
        description: |
          issue_url: the GitHub issue URL that tracks the status of Providers release
          (Either rc_testing_branch or issue_url is required, and you cannot give both.)
        required: false
      base_git_rev:
        description: 'The base git revision to test Providers RCs (temp)'
        required: false
        type: string
        default: 'main'
defaults:
  run:
    working-directory: python-sdk
jobs:
  validate-manual-input:
    runs-on: 'ubuntu-20.04'
    steps:
      - name: Validate user input
        if: |
           inputs.issue_url == ''
        run: |
          echo "issue_url is required"
          exit 1

  create-branch-for-testing-rc-release:
    needs: validate-manual-input
    runs-on: 'ubuntu-20.04'
    if: ${{ inputs.issue_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.base_git_rev }}

      - name: Install dev dependency
        run: |
          python3 -m pip install -r dev/scripts/integration_test_scripts/requirements.txt

      - name: Create RC branch
        id: create_rc_branch
        run: |
          current_timestamp=`date +%Y-%m-%dT%H-%M-%S%Z`
          echo "Current timestamp is" $current_timestamp
          branch_name="rc-test-$current_timestamp"
          git checkout -b $branch_name
          echo "rc_testing_branch=$branch_name" >> $GITHUB_OUTPUT

      - name: Update project dependencies to use RC providers
        run: |
          echo "Updating pyproject.toml with RC provider packages"
          python3 dev/scripts/integration_test_scripts/replace_dependencies.py --issue-url ${{ inputs.issue_url }}

      - name: Setup Github Actions git user
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Actions"

      - name: Commit changes and create a pull request
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git add pyproject.toml
          git commit -m "Update pyproject.toml to use RC provider packages"
          git push origin ${{ steps.create_rc_branch.outputs.rc_testing_branch }}
          gh pr create --base ${{ inputs.base_git_rev }} \
                       --title "[DO NOT MERGE] Test RC provider packages" \
                       --body "${{ inputs.issue_url }}" --fill
          echo "git_rev=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
    outputs:
      rc_testing_branch: ${{ steps.create_rc_branch.outputs.rc_testing_branch }}
