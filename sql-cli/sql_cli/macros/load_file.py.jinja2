{% macro load_file(yaml_file, dag) -%}
{% set yaml_content = yaml_file.get_yaml_content() -%}
{{ yaml_file.get_variable_name() }} = aql.load_file(
    {#- Note: Unfortunately, we cannot simply use **kwargs as some of the deserialized fields
        such as File or Table contain invalid args for an __init__ call.
        For example:
          `input_file={{ yaml_content.input_file }}` won't work as the deserialized input file
          contains args such as `_name` which cannot be set,
          causing `input_file=File(_name="...", ...)` to fail when parsed by python. #}
    input_file=File(
        path="{{ yaml_content.input_file.path }}",
        {%- for param_k, param_v in yaml_content.input_file.items() %}
        {%- if param_k in ["conn_id", "normalize_config", "is_dataframe"] %}
        {{ param_k }}="{{ param_v }}",
        {%- endif %}
        {%- endfor %}
        {# filetype is set separately as it needs to be instantiated #}
        {%- if "filetype" in yaml_content.input_file %}
        filetype=FileType("{{ yaml_content.input_file.filetype }}"),
        {%- endif %}
    ),
    {%- if "output_table" in yaml_content %}
    output_table=Table(
        name="{{ yaml_content.output_table.get('name', yaml_file.name) }}",
        conn_id="{{ yaml_content.output_table.conn_id }}",
        {%- if "metadata" in yaml_content.output_table %}
        metadata=Metadata(
            {%- for param_k, param_v in yaml_content.output_table.metadata.items() %}
            {%- if param_k in ["schema", "database"] %}
            {{ param_k }}="{{ param_v }}",
            {%- endif %}
            {%- endfor %}
        )
        {%- endif %}
    ),
    {%- endif %}
    {%- for param_k, param_v in yaml_content.items() %}
    {%- if param_k in [
        "chunk_size",
        "if_exists",
        "ndjson_normalize_sep",
        "use_native_support",
        "native_support_kwargs",
        "columns_names_capitalization",
        "enable_native_fallback"
    ] %}
    {{ param_k }}={{ param_v }},
    {%- endif %}
    {%- endfor %}
    task_id="{{ yaml_file.get_variable_name() }}",
)
{%- endmacro -%}
